// WARNING
//
// Do NOT edit this file while ZNC is running!
// Use webadmin or *controlpanel instead.
//
// Altering this file by hand will forfeit all support.
//
// But if you feel risky, you might want to read help on /znc saveconfig and /znc rehash.
// Also check http://en.znc.in/wiki/Configuration

AnonIPLimit = 10
ConnectDelay = 5
HideVersion = false
LoadModule = webadmin
LoadModule = adminlog
MaxBufferSize = 500
ProtectWebSessions = true
// /home/ajnasz/.znc/znc.pem
SSLCertFile = {{ znc_ssl_cert_path }}
ServerThrottle = 30
Skin = _default_
StatusPrefix = *
Version = 1.6.5
TrustedProxy = 127.0.0.1

<Listener listener0>
	AllowIRC = true
	AllowWeb = false
	IPv4 = true
	IPv6 = false
	Port = 12000
	SSL = true
	URIPrefix = /
</Listener>

<Listener listener1>
	AllowIRC = false
	AllowWeb = true
	IPv4 = true
	IPv6 = false
	Port = 12001
	SSL = false
	URIPrefix = /znc/
</Listener>
{% for user in znc_users -%}

<User {{ user.name }}>
	Admin = {{ "true" if user.admin else "false" }}
	Allow = *
	Nick = {{ user.nick }}
	AltNick = {{ user.nick }}_
	AppendTimestamp = false
	AutoClearChanBuffer = true
	AutoClearQueryBuffer = true
	BindHost = 0.0.0.0
	Buffer = 50
	ChanModes = +stn
	ClientEncoding = ^UTF-8
	DenyLoadMod = false
	DenySetBindHost = false
	Ident = {{ user.ident }}
	JoinTries = 10
	LoadModule = webadmin
	LoadModule = log
	MaxJoins = 0
	MaxNetworks = 1
	MaxQueryBuffers = 50
	MultiClients = true
	PrependTimestamp = true
	QuitMsg = %znc%
	RealName = {{ user.realname }}
	Skin = _default_
	TimestampFormat = [%H:%M:%S]

	{% for network in user.networks -%}

	<Network {{ network.name }}>
		Encoding = ^UTF-8
		FloodBurst = 2
		FloodRate = 1.00
		IRCConnectEnabled = true
		JoinDelay = 0

{% if 'ident' in network %}
		Ident = {{ network.ident }}
{% endif %}

		Server = {{ network.server }}

{% if 'modules' in network %}
{% for module in network.modules %}
		LoadModule = {{ module }}
{% endfor %}
{% endif %}

{% if 'chans' in network %}
{% for chan in network.chans %}
		<Chan {{ chan }}>
		</Chan>
{% endfor %}
{% endif %}

	</Network>

	{% endfor -%}

	{% for pass in user.passes -%}

	<Pass password>
		Hash = {{ pass.hash }}
		Method = {{ pass.method }}
		Salt = {{ pass.salt }}
	</Pass>

	{%- endfor %}

</User>

{% endfor %}
